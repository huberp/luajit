Patch to add package.exedir and make '!' in LUA_PATH and LUA_CPATH work on Linux and OSX too.
--- lib_package.c	2019-12-29 11:14:05 +0200
+++ src/src/lib_package.c	2019-12-29 11:09:46 +0200
@@ -17,6 +17,15 @@
 #include "lj_err.h"
 #include "lj_lib.h"

+#if LJ_TARGET_LINUX
+#include <unistd.h>
+#endif
+
+#if LJ_TARGET_OSX
+#include <stdlib.h>
+#include <mach-o/dyld.h>
+#endif
+
 /* ------------------------------------------------------------------------ */

 /* Error codes for ll_loadfunc. */
@@ -65,6 +74,58 @@
   return (const char *)dlsym(lib, sym);
 }

+#if LJ_TARGET_LINUX
+
+#undef setprogdir
+
+/* stack on entry: -2: package table, -1: (c)path string */
+static void setprogdir(lua_State *L)
+{
+  char path[PATH_MAX+2];
+  char *ls;
+  int n = readlink("/proc/self/exe", path, PATH_MAX+1);
+  if (n > 0 && n <= PATH_MAX) {
+    path[n] = '\0'; /* readlink doesn't null-terminate */
+    if ((ls = strrchr(path, '/'))) {  /* find position of last slash */
+      *ls = '\0';
+      lua_pushstring(L, path);
+      lua_setfield(L, -3, "exedir");
+      luaL_gsub(L, lua_tostring(L, -1), LUA_EXECDIR, path);
+      lua_remove(L, -2);  /* remove original string */
+      return;
+    }
+  }
+  luaL_error(L, "unable to get the path of the executable");
+}
+
+#elif LJ_TARGET_OSX
+
+#undef setprogdir
+
+/* stack on entry: -2: package table, -1: (c)path string */
+static void setprogdir(lua_State *L)
+{
+  char path1[PATH_MAX+1];
+  char path2[PATH_MAX+1];
+  char *ls;
+  uint32_t n = PATH_MAX;
+  if (_NSGetExecutablePath(path1, &n) == 0) {
+    if (realpath(path1, path2)) { /* resolve symlinks and `..` */
+      if ((ls = strrchr(path2, '/'))) {  /* find position of last slash */
+        *ls = '\0';
+        lua_pushstring(L, path2);
+        lua_setfield(L, -3, "exedir");
+        luaL_gsub(L, lua_tostring(L, -1), LUA_EXECDIR, path2);
+        lua_remove(L, -2);  /* remove original string */
+        return;
+      }
+    }
+  }
+  luaL_error(L, "unable to get the path of the executable");
+}
+
+#endif
+
 #elif LJ_TARGET_WINDOWS

 #define WIN32_LEAN_AND_MEAN
@@ -92,6 +153,7 @@

 #undef setprogdir

+/* stack on entry: -2: package table, -1: (c)path string */
 static void setprogdir(lua_State *L)
 {
   char buff[MAX_PATH + 1];
@@ -102,6 +164,8 @@
     luaL_error(L, "unable to get ModuleFileName");
   } else {
     *lb = '\0';
+    lua_pushstring(L, buff);
+    lua_setfield(L, -3, "exedir");
     luaL_gsub(L, lua_tostring(L, -1), LUA_EXECDIR, buff);
     lua_remove(L, -2);  /* remove original string */
   }
